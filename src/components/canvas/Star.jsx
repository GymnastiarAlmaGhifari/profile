/* eslint-disable react/prop-types */
/* eslint-disable react/no-unknown-property */
/* eslint-disable no-unused-vars */
/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.8 star.gltf --transform
Author: Oleksandr Pelypenko (https://sketchfab.com/ape.cgart)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/gold-star-15adb339f45f4620a111c43e33388ba4
Title: Gold Star
*/

import React, { Suspense, useEffect, useRef, useState } from "react";
import { MeshBasicMaterial, TextureLoader } from "three";

import CanvasLoader from "../common/Loader";
import { Canvas, useLoader } from "@react-three/fiber";
import { OrbitControls, Preload, Stage, useGLTF, useTexture } from "@react-three/drei";

const Star = (props) => {
  const { nodes, materials } = useGLTF("/star-transformed.glb");

  return (
    <group {...props} dispose={null}>
      <pointLight intensity={1.3} angle={0.2} penumbra={1} position={[0, 2.9, -1]} />

      <mesh geometry={nodes.Star_Gold_0.geometry} material={materials.Gold} scale={0.008} />
    </group>
  );
};

const StarCanvas = () => {
  return (
    <Canvas frameloop="demand" dpr={[1, 2]} gl={{ preserveDrawingBuffer: true }}>
      <Stage environment="city" intensity={0.6}>
        <Suspense fallback={<CanvasLoader />}>
          <OrbitControls enableZoom={false} autoRotate autoRotateSpeed={0.7} />
          <Star />
        </Suspense>
      </Stage>
      <Preload all />
    </Canvas>
  );
};

export default StarCanvas;

useGLTF.preload("/star-transformed.glb");
